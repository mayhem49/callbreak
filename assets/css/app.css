@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";
.container{
  width: 50%;
  border: 2px solid green;
  padding: 2%;
  margin: auto;
}
/* just setting it here for now*/
.board-container {
  width: 60%;
  margin: 5px auto;
  border: 2px solid green;
  aspect-ratio: 3/2;
  display: grid;
  box-sizing: border-box;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(6, minmax(0, 1fr));
}

.player {
  text-align: center;
  background-color: bisque;
}

.player-top {
  grid-row: 1;
  grid-column: 3;
}

.card_area-top {
  grid-row: 1;
  grid-column: 4;
}

.player-right {
  grid-row: 4;
  grid-column: 6;
}
.card_area-right {
  grid-row: 3;
  grid-column: 6;
}

.player-left {
  grid-row: 3;
  grid-column: 1;
}
.card_area-left {
  grid-row: 4;
  grid-column: 1;
}

.player-bottom {
  grid-row: 6;
  grid-column: 1;
}
.card_area-bottom {
  grid-row: 6;
  grid-column: 2/7;
}
.card_area {
  /*background-color: rgb(232, 127, 127); */
}

.bidding{
  grid-row: 5;
  grid-column: 2/7;
  display:flex;
  align-items: flex-end;
  padding-bottom: 10px;
  width: 100%;
  justify-content: center;
  gap: 10px;
  cursor: pointer;
}
.bidding>span{
  box-sizing: content-box;
  text-align: center;
  width: 2ch;
  background-color: violet;
  margin: 2px;
  padding: 5px;
}
.bidding>span:hover{

}
.self-card {
  box-sizing: border-box;
  float: left;
  height: 110%;
  transform: translateY(-9%);
  aspect-ratio: 2/3;
}
divs.self-card:first-of-type{
  margin-left: 0;
}
div.self-card:not(:first-of-type){
  margin-left: -2.89%;
}
.card_area-bottom {
  width: 100%;
}
.self-card:hover{
  background-color: rgb(225,225,225);
}
.self-card{
  cursor: pointer;
  background-color: rgb(245,245,245);
}
.self-card.playable{
  /* transform: translateY(-12%); */
}

.self-card.transition_test{
  transform: translateY(-52%);
}
.self-card.unplayable{
  pointer-events: none;
  background-color: rgb(200,200,200);
}
div.self-card:not(:first-child){
  box-shadow: -6px 3px 6px -3px #616161, -6px 0px 6px -3px #616161;
}

.card_area-bottom {
  /* overflow-x: scroll; */
  white-space: nowrap;
}

/* card play section middle*/
.card-play{
  height: 110%;
  aspect-ratio: 2/3;
  border: 2px solid green;
  background-color: aqua;
  box-sizing: border-box;
}

.card-play.bottom{
  grid-row: 4;
  grid-column: 4;
}
.card-play.left{
  grid-row: 4;
  grid-column: 3;
}

.card-play.right, .card-play.top{
  grid-row: 3;
  grid-column: 4;
}

.card-play.left{
  transform-origin: bottom left;
  transform: translate(0, -133.33%) rotate(90deg) ;
  transform-origin: top center;
  transform: translateX(21.67%) rotate(-90deg);
  transform: rotate(-90deg);
  transform: translateX(8.8%) rotate(-90deg);
}
.card-play.right{
  transform-origin: top center;
  transform: translate(-50%, 90.90%) rotate(-90deg);
}

.card-play.top{
  transform: translate(-50%,12%);
}

.card-play.bottom{
  z-index: 10;
  transform: translate(-50%,-12%) rotate(180deg);
}

.card-play{
  display: flex;
  justify-content: space-between;
  padding: 2px;
}
.card-play > span:first-child{
  align-self: flex-start;
}
.card-play > span:last-child{
  align-self: flex-end;
}
.card-play.bottom > span:last-child{
  transform: rotate(180deg);
}
.card-play.right > span:last-child{
  transform: rotate(180deg);
}

.card-black{
  color: black;
  font-size: 1.5rem;
}
.card-red{
  color: red;
  font-size: 1.5rem;
}

.card_area.opponent>div{
  height: 100%;
  aspect-ratio: 2/3;
  float: left;

  box-sizing: border-box;
  box-shadow: -6px 3px 6px -3px #616161, -6px 0px 6px -3px #616161;
  background:
    linear-gradient(115deg, transparent 75%, rgba(255,255,255,.8) 75%) 0 0,
    linear-gradient(245deg, transparent 75%, rgba(255,255,255,.8) 75%) 0 0,
    linear-gradient(115deg, transparent 75%, rgba(255,255,255,.8) 75%) 7px -15px,
    linear-gradient(245deg, transparent 75%, rgba(255,255,255,.8) 75%) 7px -15px,
    #36c;
  background-size: 15px 30px;
}
.card_area.opponent>div:first-of-type{
  margin-left: 0;
}
.card_area.opponent>div:not(:first-of-type){
  margin-left: -39.8%;
}
.card_area.opponent{
  box-sizing: border-box;

}
.player.current-player{
  animation: 1s linear infinite alternate current-player-animation;
}

@keyframes current-player-animation{
from{
  background-color: gray;
}
to{
  background-color: aqua;
}
}
.timer{
  grid-row: 1;
  grid-column: 1;
  text-align: center;
}

